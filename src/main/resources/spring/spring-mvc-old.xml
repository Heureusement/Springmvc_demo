<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       default-lazy-init="true">

    <context:annotation-config/>
    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.hellocc.demo.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven/>

    <!--
    &lt;!&ndash; 处理JSON数据转换，为了处理返回的JSON数据的编码，默认是ISO-88859-1的，这里把它设置为UTF-8,解决有乱码的情况 &ndash;&gt;
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    &lt;!&ndash; 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven和component-scan之前,否则乱码问题同样无法解决 &ndash;&gt;
    &lt;!&ndash; Spring3.1推荐使用RequestMappingHandlerAdapter &ndash;&gt;
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter" />
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>-->

    <!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />

    <!-- 静态页面文件 -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- Bean解析器，级别高于默认JSP解析器，寻找bean对象进行二次处理 -->
    <bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1" />
    </bean>

    <!--
        InternalResourceViewResolver：默认JSP解析器,用于支持Servlet、JSP视图解析
        viewClass：JstlView表示JSP模板页面需要使用JSTL标签库，classpath中必须包含jstl的相关jar包
        prefix和suffix：查找视图页面的前缀和后缀（前缀[逻辑视图名]后缀）
        比如传进来的逻辑视图名为hello，则该该jsp视图页面应该存放在“WEB-INF/jsp/hello.jsp”
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

<!--    &lt;!&ndash;文件上传&ndash;&gt;
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        &lt;!&ndash; 默认编码为UTF-8 &ndash;&gt;
        <property name="defaultEncoding" value="UTF-8" />
        &lt;!&ndash; 设置上传文件的最大尺寸为10MB &ndash;&gt;
        <property name="maxUploadSize" value="104857600" />
        &lt;!&ndash;  设置临时文件夹 &ndash;&gt;
        &lt;!&ndash;<property name="uploadTempDir" value="temp" />&ndash;&gt;
    </bean>-->
</beans>